name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: dam_stats_db
          POSTGRES_USER: your_db_user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run migrations
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/dam_stats_db
      run: |
        python manage.py migrate

    - name: Run tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/dam_stats_db
      run: |
        python manage.py test

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push Docker image
      run: |
        docker build -t your-dockerhub-username/django-damproject:${{ github.sha }} .
        docker push your-dockerhub-username/django-damproject:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to Production
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          docker pull your-dockerhub-username/django-damproject:${{ github.sha }}
          docker-compose -f /path/to/docker-compose.prod.yml up -d --no-deps --build web
        EOF
