name: Django CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_and_deploy:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: dam_stats_db
          POSTGRES_USER: dam_user
          POSTGRES_PASSWORD: dam_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U dam_user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Updated to v3

    - name: Set up Python
      uses: actions/setup-python@v3  # Updated to v3
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up Django environment
      run: |
        python manage.py collectstatic --noinput
        python manage.py makemigrations
        python manage.py migrate
      env:
        DB_NAME: dam_stats_db
        DB_USER: dam_user
        DB_PASSWORD: dam_password
        DB_HOST: localhost
        DB_PORT: 5432

    - name: Run tests
      env:
        DJANGO_SETTINGS_MODULE: dam_project.settings
        DB_NAME: dam_stats_db
        DB_USER: dam_user
        DB_PASSWORD: dam_password
        DB_HOST: localhost
        DB_PORT: 5432
      run: |
        python manage.py test

    - name: Build Docker image
      run: |
        docker build -t yourusername/django-web:latest .

    - name: Stop any running container
      run: |
        docker stop django-container || true
        docker rm django-container || true

    - name: Run Docker container locally
      run: |
        docker run -d -p 8000:8000 --name django-container yourusername/django-web:latest

    - name: Verify deployment
      run: |
        sleep 10  # Wait for container to start
        curl --fail http://localhost:8000 || (echo "App did not start correctly" && exit 1)
